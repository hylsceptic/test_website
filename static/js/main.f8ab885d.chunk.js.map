{"version":3,"sources":["components/Mint.js","components/View.js","components/Transfer.js","components/CountDown.js","App.js","reportWebVitals.js","index.js"],"names":["Mint","total","minted","data_url","image_url","free_sup","free_minted","useState","cnt","setCnt","disable_claim","setDisableClaim","provider","ethers","providers","Web3Provider","window","ethereum","address","data","abi","useEffect","send","then","signer","getSigner","getAddress","addr","console","log","kitties","Contract","connect","IsClaimedFree","res","className","type","value","disabled","onClick","mint","catch","err","alert","message","onInput","e","target","overrides","utils","parseEther","toString","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","padding","width","View","show_my_kitties","show_all_kitties","classes","length","ImageList","cols","rowHeight","gap","map","tile","ImageListItem","src","ImageListItemBar","title","Transfer","idx","setIdx","to_address","setToAddress","transferFrom","selectedAddress","CountDown","start_height","current_heght","setCurrentHeight","getBlockNumber","toFixed","App","setKitties","setTotal","setMinted","setFreeSup","setFreeMinted","setStartHeight","setDataUrl","setImageUrl","kitties_contract","a","enable","walletOfOwner","toNumber","totalSupply","FreeSupply","getFreeMinted","getBaseURI","getSaleTime","base_url","fetch","substring","json","image","MAX_KITTIES","initData","all_kitties","i","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ab885d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport data from './data.json';\r\nimport \"./Mint.css\";\r\n\r\n\r\nfunction Mint({total, minted, data_url, image_url, free_sup, free_minted}) {\r\n    const [cnt, setCnt] = useState(1);\r\n    const [disable_claim, setDisableClaim] = useState(false);\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const address = data.address;\r\n    const abi = data.abi;\r\n    \r\n\r\n    useEffect(() => {\r\n        provider.send(\"eth_requestAccounts\", []).then(() =>\r\n        {\r\n            const signer = provider.getSigner();\r\n            signer.getAddress().then((addr)=> {\r\n                // console.log(addr)             \r\n                console.log(free_minted, free_sup);   \r\n                setDisableClaim(free_minted < free_sup ? false : true);\r\n                let kitties = new ethers.Contract(address, abi);\r\n                kitties = kitties.connect(signer);\r\n                kitties.IsClaimedFree(addr).then((res) => {\r\n                    if (res) {\r\n                        setDisableClaim(true);\r\n                    }\r\n                })\r\n            });\r\n        });\r\n      }, [free_sup]);\r\n\r\n    let claim = () => {\r\n        provider.send(\"eth_requestAccounts\", []).then(() =>\r\n        {\r\n            const signer = provider.getSigner();\r\n            let kitties = new ethers.Contract(address, abi);\r\n            kitties = kitties.connect(signer);\r\n            kitties.mint(1).catch((err) => alert(err.message));\r\n        });\r\n    }\r\n\r\n    let mint_new = () => {\r\n        if (cnt === 0) return;\r\n        provider.send(\"eth_requestAccounts\", []).then(() =>\r\n        {\r\n            const signer = provider.getSigner();\r\n            let kitties = new ethers.Contract(address, abi);\r\n            kitties = kitties.connect(signer);\r\n            let price = 0.01;\r\n            let overrides = {\r\n                value: ethers.utils.parseEther((cnt * price).toString())\r\n            };\r\n            kitties.mint(cnt, overrides).catch((err) => alert(err.message));\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Mint\">\r\n            <h3>Basic info:</h3>\r\n            <p>Minted/free/total: {minted} / {free_sup} / {total} </p>\r\n            <p>Metadata url: {data_url}</p> \r\n            <p>Image url: {image_url}</p>\r\n            <p>Contract Address: {data.address}</p>\r\n            <div>\r\n                <h3>Claim kitty:</h3>       \r\n                <p>Free kitties remaining: {free_sup - free_minted}</p>\r\n                <p>{disable_claim ? \"You are already claimed or no free kitties are remianing.\" : \"\"}</p>\r\n                <input\r\n                type=\"button\"\r\n                value=\"Claim\"\r\n                disabled={disable_claim}\r\n                onClick={claim}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3>Mint Kitties:</h3>\r\n                <p>Price: 0.01 ETH per kitty.</p>\r\n                <h4>Count:</h4>\r\n                <input type=\"text\" value={cnt} onInput= {e => setCnt(e.target.value)} />\r\n                <input\r\n                type=\"button\"\r\n                value=\"Mint\"\r\n                onClick={mint_new}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mint;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ImageList } from '@material-ui/core';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport { ImageListItemBar } from '@material-ui/core';\r\nimport './View.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      padding: 20,\r\n      width: 1000\r\n    }\r\n  }));\r\n\r\nfunction View({kitties, show_my_kitties, show_all_kitties, image_url}) {\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"View\">\r\n          <h3>Show Kitties:</h3>\r\n          <div>\r\n            <input\r\n                  type=\"button\"\r\n                  value=\"My kitties\"\r\n                  onClick={show_my_kitties}\r\n                  />\r\n            \r\n            <input\r\n                  type=\"button\"\r\n                  value=\"All kitties\"\r\n                  onClick={show_all_kitties}\r\n                  />\r\n          </div>\r\n          <p>{kitties.length === 0 ? \"Mint at least one kitty to show...\" : \"\"}</p>\r\n          <div className={classes.root}>\r\n            <ImageList cols={4} rowHeight={225}  gap={20} className={classes.gridList}>\r\n              {kitties.map((tile) => (\r\n                <ImageListItem key={tile}>\r\n                  <img src={\"https://arweave.net/\" + \"60Y_LV_957hWcDfLZQ56LcGRbLKHOgc4d4RnJf3nLho/\" + tile.toString() + \".png\"} />\r\n                  <ImageListItemBar\r\n                    title={\"Kitties #\" + tile.toString()}\r\n                  />\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport data from './data.json';\r\nimport \"./Transfer.css\";\r\n\r\nfunction Transfer() {\r\n    const [idx, setIdx] = useState(0);\r\n    const [to_address, setToAddress] = useState(\"\");\r\n    \r\n    let transfer = () => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const address = data.address;\r\n        const abi = data.abi;\r\n        provider.send(\"eth_requestAccounts\", []).then(() =>\r\n        {\r\n            const signer = provider.getSigner();\r\n            let kitties = new ethers.Contract(address, abi);\r\n            kitties = kitties.connect(signer);\r\n            kitties.transferFrom(window.ethereum.selectedAddress, to_address, idx).catch((err) => alert(err.message));\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Transfer\">\r\n            <h3>Transfer Kitty:</h3>\r\n            <h4>Receiver:</h4>\r\n            <input type=\"idx\" value={to_address} onInput= {e => setToAddress(e.target.value)} />\r\n            <h4>Kitty Id:</h4>\r\n            <input type=\"idx\" value={idx} onInput= {e => setIdx(e.target.value)} />\r\n            <input\r\n            type=\"button\"\r\n            value=\"Transfer\"\r\n            onClick={transfer}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transfer;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { ethers } from \"ethers\";\r\nimport './CountDown.css';\r\n\r\nfunction CountDown({start_height}) {\r\n    let [current_heght, setCurrentHeight] = useState(0);\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    provider.getBlockNumber().then((res) => {setCurrentHeight(res)})\r\n    if (start_height > current_heght) {\r\n        return (\r\n            <div className=\"CountDown\">\r\n                <h3>Count down:</h3>\r\n                <p>{start_height - current_heght} Block to go, approximately {((start_height - current_heght) / 4).toFixed(1)} minites</p>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountDown\r\n","import { ethers } from \"ethers\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Mint from './components/Mint';\nimport View from './components/View';\nimport Transfer from \"./components/Transfer\";\nimport CountDown from \"./components/CountDown\";\nimport data from './components/data.json';\n\nfunction App() {\n    const [kitties, setKitties] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [minted, setMinted] = useState(0);\n    const [free_sup, setFreeSup] = useState(0);\n    const [free_minted, setFreeMinted] = useState(0);\n    const [start_height, setStartHeight] = useState(0);\n    const [data_url, setDataUrl] = useState(\"\");\n    const [image_url, setImageUrl] = useState(\"\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const address = data.address;\n    const abi = data.abi;\n    let kitties_contract = new ethers.Contract(address, abi, provider);\n\n    useEffect(() => {\n      const initData = async () => {\n        await window.ethereum.enable();\n        kitties_contract.walletOfOwner(window.ethereum.selectedAddress).then((res) => {\n            res = res.map((idx) => {return idx.toNumber()});\n            setKitties(res);\n          });\n          setMinted((await kitties_contract.totalSupply()).toNumber());\n          setFreeSup((await kitties_contract.FreeSupply()).toNumber());\n          setFreeMinted((await kitties_contract.getFreeMinted()).toNumber());\n          setDataUrl(await kitties_contract.getBaseURI());\n          setStartHeight(await kitties_contract.getSaleTime());\n          let base_url = await kitties_contract.getBaseURI();\n          setDataUrl(base_url)\n          let data = await fetch(\"https://arweave.net/\" + base_url.substring(5) + '0').then((res) => res.json());\n          setImageUrl(data.image.substring(0, data.image.length - 5));\n          setTotal((await kitties_contract.MAX_KITTIES()).toNumber());\n      }\n      \n      initData();\n    }, []);\n\n  let show_all_kitties = () => {\n    let all_kitties = [];\n    for (var i = 0; i < minted; i++) {\n      all_kitties.push(i);\n    };\n    setKitties(all_kitties);\n  };\n  let show_my_kitties = () => {\n    kitties_contract.walletOfOwner(window.ethereum.selectedAddress).then((res) => {\n      res = res.map((idx) => {return idx.toNumber()});\n      setKitties(res);\n    });\n  };\n\n  return (\n    <div>\n    <container>\n      <CountDown start_height={start_height}></CountDown>\n    </container>\n    <container>\n      <Mint \n        total={total} \n        minted={minted} \n        data_url={data_url}\n        image_url={image_url}\n        free_sup={free_sup}\n        free_minted={free_minted}></Mint>\n    </container>\n    <container>\n      <Transfer></Transfer>\n    </container>\n    <container>\n      <View kitties={kitties} show_all_kitties={show_all_kitties} show_my_kitties={show_my_kitties} image_url={image_url}></View>\n    </container>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}